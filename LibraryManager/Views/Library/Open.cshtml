@{
    ViewData["Title"] = "Open";
    if (User.IsInRole("Admin"))
    {

        Layout = "~/Views/Shared/_AdminLayout.cshtml";

    }
    else if (User.IsInRole("User"))
    {

        Layout = "~/Views/Shared/_Layout.cshtml";

    }
    else
    {
        Layout = "~/Views/Shared/_GuestLayout.cshtml";
    }
}

@using LibraryManager.DTO.Models;
@using Microsoft.AspNetCore.Identity
@using Microsoft.CodeAnalysis.CSharp.Syntax
@model LibraryOpenViewModel

<div id="content" class="container">
    <div id="imageSection" class="alert col-sm-4">
        <img src="~/images/@Model.BookDTO.ImageName" width="300" height="450" class="img img-rounded mx-auto d-block" alt="@Model.BookDTO.Title" />
        <h4 style="padding:20px">
            @if (User.Identity.IsAuthenticated && User.IsInRole("User") && (Model.DoesUserReadsBook))
            {
                if (Model.IsBookRated)
                {
                    @Html.ActionLink("Dislike", "RateBook", "Library",
                                               new
                                               {
                                                   bookId = Model.BookDTO.Id
                                               },
                                               htmlAttributes: new
                                               {
                                                   @class = "btn btn-danger",
                                                   @role = "button"
                                               })
                }
                else
                {
                    @Html.ActionLink("Like", "RateBook", "Library",
                                               new
                                               {
                                                   bookId = Model.BookDTO.Id
                                               },
                                               htmlAttributes: new
                                               {
                                                   @class = "btn btn-success",
                                                   @role = "button"
                                               })
                }
            }
            Rating: @Model.BookDTO.Rating
        </h4>
                @if (User.Identity.IsAuthenticated && User.IsInRole("User"))
                {
                    if (Model.IsBookInWishList ==true)
                         {
                             @Html.ActionLink("Delete from wish list", "DeleteBookFromWishList", "Library",
                                               new
                                               {
                                                   bookId = Model.BookDTO.Id
                                               },
                                               htmlAttributes: new
                                               {
                                                   @class = "btn btn-danger btn-lg",
                                                   @role = "button"
                                               })
                         }
                    else if(Model.IsBookInWishList == false)
                         {
                             @Html.ActionLink("Add to wish list", "AddBookToWishList", "Library",
                                               new
                                               {
                                                   bookId = Model.BookDTO.Id
                                               },
                                               htmlAttributes: new
                                               {
                                                   @class = "btn btn-success btn-lg",
                                                   @role = "button"
                                               })
                         }

                  @if (User.Identity.IsAuthenticated && User.IsInRole("User"))
                  {
                      if (Model.DoesUserReadsBook == true)
                      {
                          @Html.ActionLink("Stop reading", "StopReadingBook", "Library",
                                                     new
                                                     {
                                                         bookId = Model.BookDTO.Id
                                                     },
                                                     htmlAttributes: new
                                                     {
                                                         @class = "btn btn-danger btn-lg",
                                                         @role = "button"
                                                     })
                      }
                      else if(Model.DoesUserReadsBook==false)
                      {
                          @Html.ActionLink("Read Book", "StartReadingBook", "Library",
                                                     new
                                                     {
                                                         bookId = Model.BookDTO.Id
                                                     },
                                                     htmlAttributes: new
                                                     {
                                                         @class = "btn btn-success btn-lg",
                                                         @role = "button"
                                                     })
                      }
                  }
                }
        


    </div>
    <div id="descriptionSection" class="alert col-sm-8">
        <div class="row">
            <div class="col-md-8">
                <a href="@Url.Action("GetReport", "Library", new{title = Model.BookDTO.Title})" target="_blank"><h2>@Model.BookDTO.Title</h2></a>
            </div>
            <div class="col-md-4 margin-center">
                @if (User.Identity.IsAuthenticated && User.IsInRole("Admin"))
                {
                    <button type="button" class="btn btn-info" onclick="location.href = '@Url.Action("Edit", "Admin", new {id = Model.BookDTO.Id})'"><i class="fa fa-cog fa-fw" aria-hidden="true"></i>Edit</button>
                    <button type="button" class="btn btn-danger" onclick="location.href = '@Url.Action("Delete", "Admin", new {id = Model.BookDTO.Id})'">Delete</button>
                }
            </div>
        </div>
        <h4>by @Model.BookDTO.Author.FirstName @Model.BookDTO.Author.LastName</h4>
        <h4>Published in @Model.BookDTO.Year</h4>
        <br />
        <h4>Genres:</h4>
        @foreach (var genre in Model.BookDTO.Genres)
        {
            <a sp-controller="Library" asp-action="OpenByGenre" asp-route-id="@genre.Id" class="a-item">
                <h4>
                    <strong>@genre.GenreName </strong>
                </h4>
            </a>
        }
        <div class="border">
            @if (string.IsNullOrWhiteSpace(Model.BookDTO.Description))
            {
                <p>Sorry, there is no description for this book.</p>
            }
            else
            {
                <p>@Model.BookDTO.Description</p>
            }
        </div>
    </div>
</div>

